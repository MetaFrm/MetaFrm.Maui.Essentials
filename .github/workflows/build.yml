name: build

# 참고 사이트
# https://blog.taranissoftware.com/build-net-maui-apps-with-github-actions

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  METAFRM_UPLOADMODULE_URL: "https://download.metafrm.net/github/MetaFrameworkManagementSystemUploadModule.zip"
  METAFRM_UPLOADMODULE_ZIP: "MetaFrameworkManagementSystemUploadModule.zip"
  METAFRM_UPLOADMODULE_FILE: "MetaFrameworkManagementSystemUploadModule.exe"
  DLL_ID: 25
  DLL_PATH: "MetaFrm.Maui.Essentials(net6.0)/bin/Release/net6.0/MetaFrm.Maui.Essentials.dll"


jobs:
  build:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: Install MAUI Workload
      run: dotnet workload install maui --ignore-failed-sources

    - name: Restore dependencies
      run: dotnet restore

    - name: Build Debug
      run: dotnet build -c Debug --no-restore
      
    - name: Test Debug
      run: dotnet test -c Debug --no-build --verbosity normal

    - name: Build Release
      run: dotnet build -c Release --no-restore
      
    - name: Test Release
      run: dotnet test -c Release --no-build --verbosity normal

    
    - name: mkdir temp
      run: mkdir temp

    - name: download
      run: curl ${{env.METAFRM_UPLOADMODULE_URL}} --output "temp\${{env.METAFRM_UPLOADMODULE_ZIP}}"
      
    - name: download unzip
      run: curl http://stahlworks.com/dev/unzip.exe --output temp/unzip.exe
      
    - name: dir
      run: dir

    - name: dir
      run: dir temp

    - name: unzip
      run: temp\unzip.exe "temp/${{env.METAFRM_UPLOADMODULE_ZIP}}" -d temp\

      
    - name: dir
      run: dir temp
      
    - name: Upload Module
      run: temp\${{env.METAFRM_UPLOADMODULE_FILE}} ${{env.DLL_ID}} "${{env.DLL_PATH}}" "${{secrets.METAFRM_UPLOADMODULE_ACCESSKEY}}"

      
    - name: Pack nugets
      run: dotnet pack -c Release --no-build --output .
      
    - name: Push to NuGet
      run: dotnet nuget push "*.nupkg" --api-key ${{secrets.NUGET_AUTH_TOKEN}} --source https://api.nuget.org/v3/index.json
